namespace Magento\Customer\Api;

/**
 * Remote class for @see \Magento\Customer\Api\CustomerRepositoryInterface
 */
class CustomerRepositoryInterfaceRemote implements \Magento\Customer\Api\CustomerRepositoryInterface
{
    /**
     * Publisher pool
     *
     * @var \Magento\Framework\MessageQueue\PublisherPool
     */
    protected $publisherPool = null;

    /**
     * Initialize dependencies.
     *
     * @param \Magento\Framework\MessageQueue\PublisherPool $publisherPool
     */
    public function __construct(\Magento\Framework\MessageQueue\PublisherPool $publisherPool)
    {
        $this->publisherPool = $publisherPool;
    }

    /**
     * @inheritdoc
     */
    public function save(\Magento\Customer\Api\Data\CustomerInterface $customer, $passwordHash = 'default_string_value')
    {
        return $this->publisherPool
            ->getByTopicType('topic.save')
            ->publish(
                'topic.save',
                ['customer' => $customer, 'passwordHash' => $passwordHash]
            );
    }

    /**
     * @inheritdoc
     */
    public function get($email, $websiteId = null)
    {
        return $this->publisherPool
            ->getByTopicType('topic.get')
            ->publish(
                'topic.get',
                ['email' => $email, 'websiteId' => $websiteId]
            );
    }

    /**
     * @inheritdoc
     */
    public function getList(\Magento\Framework\Api\SearchCriteriaInterface $searchCriteria)
    {
        return $this->publisherPool
            ->getByTopicType('topic.getList')
            ->publish(
                'topic.getList',
                ['searchCriteria' => $searchCriteria]
            );
    }

    /**
     * @inheritdoc
     */
    public function delete($customerId)
    {
        $this->publisherPool
            ->getByTopicType('topic.delete')
            ->publish(
                'topic.delete',
                ['customerId' => $customerId]
            );
    }
}
