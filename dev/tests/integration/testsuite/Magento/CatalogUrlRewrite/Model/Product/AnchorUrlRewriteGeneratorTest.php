<?php
/**
 * Copyright Â© Magento, Inc. All rights reserved.
 * See COPYING.txt for license details.
 */
declare(strict_types=1);

namespace Magento\CatalogUrlRewrite\Model\Product;

use Magento\Catalog\Api\ProductRepositoryInterface;
use Magento\Catalog\Model\Category;
use Magento\CatalogUrlRewrite\Model\ObjectRegistryFactory;
use Magento\Framework\ObjectManagerInterface;
use Magento\Store\Model\Store;
use Magento\TestFramework\Helper\Bootstrap;
use PHPUnit\Framework\TestCase;

/**3
 * Verify generate url rewrites for anchor categories.
 */
class AnchorUrlRewriteGeneratorTest extends TestCase
{

    /**
     * @var ObjectManagerInterface
     */
    private $objectManager;

    /**
     * @var ProductRepositoryInterface
     */
    private $productRepository;

    /**
     * @var Category
     */
    private $collectionCategory;

    /**
     * @var ObjectRegistryFactory
     */
    private $objectRegistryFactory;

    /**
     * @inheritDoc
     */
    public function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->objectManager = Bootstrap::getObjectManager();
        $this->productRepository = $this->objectManager->create(ProductRepositoryInterface::class);
        $this->collectionCategory = $this->objectManager->create(Category::class);
        $this->objectRegistryFactory = $this->objectManager->create(ObjectRegistryFactory::class);
    }

    /**
     * Verify correct generate of the relative "StoreId"
     *
     * @magentoDataFixture Magento/CatalogUrlRewrite/_files/product_with_stores.php
     * @magentoDbIsolation disabled
     *
     * @return void
     */
    public function testGenerate(): void
    {
        $product = $this->productRepository->get('simple');
        $categories = $product->getCategoryCollection();
        $productCategories = $this->objectRegistryFactory->create(['entities' => $categories]);

        /** @var Store $store */
        $store = Bootstrap::getObjectManager()->get(Store::class);
        $store->load('fixture_second_store', 'code');

        /** @var AnchorUrlRewriteGenerator $generator */
        $generator = $this->objectManager->get(AnchorUrlRewriteGenerator::class);

        $this->assertEquals([], $generator->generate(1, $product, $productCategories));
        $this->assertNotEquals([], $generator->generate($store->getId(), $product, $productCategories));
    }
}
