<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="AllowedCountriesRestrictionApplyOnBackendTest">
        <annotations>
            <title value="Country filter on Customers page when allowed countries restriction for a default website is applied"/>
            <description value="Country filter on Customers page when allowed countries restriction for a default website is applied"/>
            <features value="Module/ Customer"/>
            <severity value="MAJOR"/>
            <testCaseId value="MC-6441"/>
            <useCaseId value="MAGETWO-91523"/>
            <group value="customer"/>
        </annotations>
        <before>
            <createData entity="ApiCategory" stepKey="createCategory"/>
            <createData entity="SimpleProduct" stepKey="createSimpleProduct">
                <requiredEntity createDataKey="createCategory"/>
            </createData>
            <actionGroup ref="LoginActionGroup" stepKey="login"/>

            <!--Create new website,store and store view-->
            <amOnPage url="{{AdminSystemStorePage.url}}" stepKey="goToAdminSystemStorePage"/>
            <actionGroup ref="AdminCreateWebsiteActionGroup" stepKey="AdminCreateNewWebsite">
                <argument name="newWebsiteName" value="{{NewWebSiteData.name}}"/>
                <argument name="websiteCode" value="{{NewWebSiteData.code}}"/>
            </actionGroup>
            <actionGroup ref="AdminCreateNewStoreGroupActionGroup" stepKey="AdminCreateNewStore">
                <argument name="website" value="{{NewWebSiteData.name}}"/>
                <argument name="storeGroupName" value="{{NewStoreData.name}}"/>
                <argument name="storeGroupCode" value="{{NewStoreData.code}}"/>
            </actionGroup>
            <actionGroup ref="AdminCreateStoreViewActionGroup" stepKey="AdminCreateNewStoreView">
                <argument name="StoreGroup" value="NewStoreData"/>
            </actionGroup>
            <!--Set account sharing option - Default value is 'Per Website'-->
            <actionGroup ref="SetAccountSharingOptionActionGroup" stepKey="setAccountSharingOptionToDefault"/>
            <magentoCLI command="indexer:reindex" stepKey="reindex"/>
        </before>
        <after>
            <!--delete all created data and set main website country options to default-->
            <deleteData createDataKey="createCustomer" stepKey="deleteCustomer"/>
            <deleteData createDataKey="createCategory" stepKey="deleteCategory"/>
            <deleteData createDataKey="createSimpleProduct" stepKey="deleteSimpleProduct"/>
            <actionGroup ref="AdminDeleteWebsiteActionGroup" stepKey="deleteTestWebsite">
                <argument name="websiteName" value="{{NewWebSiteData.name}}"/>
            </actionGroup>
            <actionGroup ref="NavigateToConfigurationGeneralPage" stepKey="navigateToConfigGeneralPage2"/>
            <actionGroup ref="AdminSwitchWebsiteActionGroup" stepKey="adminSwitchWebsiteActionGroup">
                <argument name="website" value="_defaultWebsite"/>
            </actionGroup>
            <actionGroup ref="SetMainWebsiteCountryOptionsToDefaultActionGroup" stepKey="setCountryOptionsToDefault"/>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>
        <!--Check that all countries are allowed initially and get amount-->
        <actionGroup ref="NavigateToConfigurationGeneralPage" stepKey="navigateToConfigGeneralPage"/>
        <conditionalClick selector="{{CountryOptionsSection.countryOptions}}" dependentSelector="{{CountryOptionsSection.countryOptionsOpen}}" visible="false" stepKey="clickOnStoreInformation"/>
        <waitForElementVisible selector="{{CountryOptionsSection.allowedCountries}}" stepKey="waitTabToExpand"/>
        <executeJS function="return document.querySelectorAll('{{CountryOptionsSection.allowedCountries}} option').length" stepKey="CountriesAmount"/>
        <checkOption selector="{{CountryOptionsSection.generalCountryAllowInherit}}" stepKey="markAllCountriesAsAvailable"/>
        <click selector="{{CountryOptionsSection.countryOptions}}" stepKey="collapseTab"/>
        <click selector="{{ContentManagementSection.Save}}" stepKey="saveConfig"/>
        <waitForPageLoad stepKey="waitForSavingSystemConfiguration"/>
        <see userInput="You saved the configuration." stepKey="seeSuccessMessage"/>
        <!-- Create customer for US -->
        <createData entity="Simple_US_CA_Customer" stepKey="createCustomer"/>
        <!-- Switch to first website, allow only Canada and set Canada as default country-->
        <actionGroup ref="AdminSwitchWebsiteActionGroup" stepKey="adminSwitchWebsiteActionGroup">
            <argument name="website" value="_defaultWebsite"/>
        </actionGroup>
        <conditionalClick selector="{{CountryOptionsSection.countryOptions}}" dependentSelector="{{CountryOptionsSection.countryOptionsOpen}}" visible="false" stepKey="clickOnStoreInformation2"/>
        <waitForElementVisible selector="{{CountryOptionsSection.allowedCountries}}" stepKey="waitAllowedCountriesToBeVisible"/>
        <uncheckOption selector="{{CountryOptionsSection.generalCountryDefaultInherit}}" stepKey="uncheckCheckbox1"/>
        <selectOption selector="{{CountryOptionsSection.generalCountryDefault}}" userInput="Canada" stepKey="chooseCanada1"/>
        <uncheckOption selector="{{CountryOptionsSection.generalCountryAllowInherit}}" stepKey="uncheckCheckbox2"/>
        <selectOption selector="{{CountryOptionsSection.allowedCountries}}" userInput="Canada" stepKey="chooseCanada2"/>
        <click selector="{{ContentManagementSection.Save}}" stepKey="saveConfig2"/>
        <waitForPageLoad stepKey="waitForSavingSystemConfiguration2"/>
        <!--Switch to second website and allow all countries except Canada-->
        <actionGroup ref="AdminSwitchWebsiteActionGroup" stepKey="adminSwitchWebsiteActionGroup2">
            <argument name="website" value="NewWebSiteData"/>
        </actionGroup>
        <conditionalClick selector="{{CountryOptionsSection.countryOptions}}" dependentSelector="{{CountryOptionsSection.countryOptionsOpen}}" visible="false" stepKey="clickOnStoreInformation3"/>
        <waitForElementVisible selector="{{CountryOptionsSection.allowedCountries}}" stepKey="waitAllowedCountriesToBeVisible2"/>
        <uncheckOption selector="{{CountryOptionsSection.generalCountryAllowInherit}}" stepKey="uncheckCheckbox3"/>
        <unselectOption selector="{{CountryOptionsSection.allowedCountries}}" userInput="Canada" stepKey="unselectCanada"/>
        <click selector="{{ContentManagementSection.Save}}" stepKey="saveConfig3"/>
        <waitForPageLoad stepKey="waitForSavingSystemConfiguration3"/>
        <amOnPage url="{{AdminEditCustomerPage.url($$createCustomer.id$$)}}" stepKey="goToCustomerEditPage"/>
        <waitForPageLoad stepKey="waitPageToLoad"/>
        <!--Open created customer details page and change US address to Canada address-->
        <actionGroup ref="OpenEditCustomerAddressFromAdminActionGroup" stepKey="editCustomerAddress">
            <argument name="address" value="US_Address_CA"/>
        </actionGroup>
        <selectOption selector="{{AdminEditCustomerAddressesSection.country}}" userInput="Canada" stepKey="selectCountry"/>
        <selectOption selector="{{AdminEditCustomerAddressesSection.state}}" userInput="Quebec" stepKey="selectState"/>
        <click selector="{{AdminEditCustomerAddressesSection.save}}" stepKey="saveAddress"/>
        <waitForPageLoad stepKey="waitForAddressSaved"/>
        <click stepKey="saveCustomer" selector="{{AdminCustomerAccountInformationSection.saveCustomerAndContinueEdit}}"/>
        <waitForPageLoad stepKey="waitForCustomersPage"/>
        <!--Go to Customers grid and check that filter countries amount is the same as initial allowed countries amount-->
        <amOnPage url="{{AdminCustomerPage.url}}" stepKey="goToCustomersGrid"/>
        <waitForPageLoad stepKey="waitForCustomersGrid"/>
        <click selector="{{AdminDataGridHeaderSection.filters}}" stepKey="openFiltersSectionOnCustomersGrid"/>
        <executeJS function="var len = document.querySelectorAll('{{AdminDataGridHeaderSection.countryOptions}}').length; return len-1;" stepKey="CountriesAmount2"/>
        <assertEquals expected='($CountriesAmount)' expectedType="integer" actual="($CountriesAmount2)" stepKey="assertCountryAmounts"/>
    </test>
</tests>
