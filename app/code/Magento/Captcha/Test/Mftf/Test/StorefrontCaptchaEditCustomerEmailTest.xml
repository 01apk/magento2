<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="StorefrontCaptchaEditCustomerEmailTest">
        <annotations>
            <features value="Captcha"/>
            <stories value="Customer Account Info Edit + Captcha"/>
            <title value="Test for checking captcha on the customer account edit page."/>
            <description value="Test for checking captcha on the customer account edit page and customer is locked."/>
            <testCaseId value="MC-14013" />
            <severity value="MAJOR"/>
            <group value="captcha"/>
            <group value="mtf_migrated"/>
        </annotations>
        <before>
            <magentoCLI command="config:set customer/captcha/forms user_edit" stepKey="enableUserEditCaptcha"/>
            <magentoCLI command="cache:clean config full_page" stepKey="cleanInvalidatedCaches"/>
            <createData entity="Simple_US_Customer" stepKey="customer"/>
            <!-- Sign in as customer -->
            <actionGroup ref="LoginToStorefrontActionGroup" stepKey="loginToStorefrontAccount">
                <argument name="Customer" value="$$customer$$"/>
            </actionGroup>
        </before>
        <after>
            <deleteData createDataKey="customer" stepKey="deleteCustomer"/>
            <!-- Revert Captcha forms configurations -->
            <magentoCLI command="config:set customer/captcha/forms user_login,user_forgotpassword" stepKey="revertCaptchaConfigurations"/>
            <magentoCLI command="cache:clean config full_page" stepKey="cleanInvalidatedCaches"/>
        </after>

        <!-- Open Customer edit page -->
        <actionGroup ref="StorefrontOpenCustomerAccountInfoEditPageActionGroup" stepKey="goToCustomerEditPage" />

        <!-- Update email with incorrect password 3 times. -->
        <actionGroup ref="StorefrontCustomerChangeEmailActionGroup" stepKey="changeEmailFirstAttempt">
            <argument name="email" value="$$customer.email$$" />
            <argument name="password" value="{{Colorado_US_Customer.password}}" />
        </actionGroup>

        <actionGroup ref="AssertMessageCustomerChangeAccountInfoActionGroup" stepKey="assertAccountMessageFirstAttempt">
            <argument name="message" value="The password doesn't match this account. Verify the password and try again." />
            <argument name="messageType" value="error" />
        </actionGroup>

        <actionGroup ref="StorefrontCustomerChangeEmailActionGroup" stepKey="changeEmailSecondAttempt">
            <argument name="email" value="$$customer.email$$" />
            <argument name="password" value="{{Colorado_US_Customer.password}}" />
        </actionGroup>

        <actionGroup ref="AssertMessageCustomerChangeAccountInfoActionGroup" stepKey="assertAccountMessageSecondAttempt">
            <argument name="message" value="The password doesn't match this account. Verify the password and try again." />
            <argument name="messageType" value="error" />
        </actionGroup>

        <actionGroup ref="StorefrontCustomerChangeEmailActionGroup" stepKey="changeEmailThirdAttempt">
            <argument name="email" value="$$customer.email$$" />
            <argument name="password" value="{{Colorado_US_Customer.password}}" />
        </actionGroup>

        <actionGroup ref="AssertMessageCustomerChangeAccountInfoActionGroup" stepKey="assertAccountMessageThirdAttempt">
            <argument name="message" value="The password doesn't match this account. Verify the password and try again." />
            <argument name="messageType" value="error" />
        </actionGroup>

        <!-- Check captcha visibility after incorrect password submit form -->
        <actionGroup ref="AssertCaptchaVisibleOnCustomerAccountInfoActionGroup" stepKey="assertCaptchaVisible" />

        <!-- Try to submit form with incorrect captcha -->
        <actionGroup ref="StorefrontCustomerChangeEmailWithCaptchaActionGroup" stepKey="changeEmailWithIncorrectCaptcha">
            <argument name="email" value="$$customer.email$$" />
            <argument name="password" value="{{Colorado_US_Customer.password}}" />
            <argument name="captcha" value="{{WrongCaptcha.value}}" />
        </actionGroup>

        <actionGroup ref="AssertMessageCustomerChangeAccountInfoActionGroup" stepKey="assertAccountMessageAfterIncorrectCaptcha">
            <argument name="message" value="Incorrect CAPTCHA" />
            <argument name="messageType" value="error" />
        </actionGroup>
    </test>
</tests>
