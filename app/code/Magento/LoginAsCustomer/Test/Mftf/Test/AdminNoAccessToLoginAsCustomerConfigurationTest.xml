<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="AdminNoAccessToLoginAsCustomerConfigurationTest">
        <annotations>
            <features value="Login As Customer"/>
            <stories value="Permissions and ACl"/>
            <title value="User does not have access to 'Login as customer' section in System Configuration"/>
            <description
                value="Login into Magento Admin panel as user that does not have access to 'Login as customer' section in System Configuration"/>
            <severity value="CRITICAL"/>
            <group value="login_as_customer"/>
        </annotations>
        <before>
            <magentoCLI command="config:set {{LoginAsCustomerConfigDataEnabled.path}} 1"
                        stepKey="enableLoginAsCustomer"/>
            <magentoCLI command="cache:flush config" stepKey="flushCacheBeforeTestRun"/>
            <createData entity="_defaultCategory" stepKey="createCategory"/>
            <createData entity="SimpleProduct" stepKey="createSimpleProduct">
                <requiredEntity createDataKey="createCategory"/>
            </createData>
            <createData entity="Simple_US_Customer" stepKey="createCustomer"/>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsDefaultAdminUserBefore"/>

            <!--Create New Role-->
            <actionGroup ref="AdminOpenCreateRolePageActionGroup" stepKey="goToNewRolePage"/>
            <actionGroup ref="AdminFillUserRoleFormActionGroup" stepKey="fillNewRoleForm">
                <argument name="role" value="customRoleAllResources"/>
            </actionGroup>
            <actionGroup ref="AdminRevokeRoleResourceActionGroup" stepKey="revokeLoginAsCustomerAccess">
                <argument name="resourceName" value="Login As Customer Section"/>
            </actionGroup>
            <actionGroup ref="AdminClickSaveButtonOnUserRoleFormActionGroup" stepKey="saveNewRole"/>

            <!--Create New User-->
            <actionGroup ref="AdminCreateUserWithApiRoleActionGroup" stepKey="adminCreateUser">
                <argument name="user" value="NewAdminUser"/>
                <argument name="role" value="customRoleAllResources"/>
            </actionGroup>
        </before>
        <after>
            <deleteData createDataKey="createCustomer" stepKey="deleteCustomer"/>
            <deleteData createDataKey="createCategory" stepKey="deleteCategory"/>
            <deleteData createDataKey="createSimpleProduct" stepKey="deleteProduct"/>

            <!--Delete new User-->
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logoutAsSaleRoleUser"/>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsDefaultAdminUserAfter"/>
            <actionGroup ref="AdminDeleteCustomUserActionGroup" stepKey="deleteNewUser">
                <argument name="user" value="NewAdminUser"/>
            </actionGroup>

            <!--Delete new Role-->
            <actionGroup ref="AdminDeleteUserRoleActionGroup" stepKey="deleteCustomRoleAllResources">
                <argument name="roleName" value="{{customRoleAllResources.rolename}}"/>
            </actionGroup>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logOut"/>

            <magentoCLI command="config:set {{LoginAsCustomerConfigDataEnabled.path}} 0"
                        stepKey="disableLoginAsCustomer"/>
            <magentoCLI command="cache:flush config" stepKey="flushCacheAfterTestRun"/>
        </after>

        <!-- Login as new User -->
        <actionGroup ref="AdminLogoutActionGroup" stepKey="logOutFromAdminPanel"/>
        <actionGroup ref="LoginAsAdmin" stepKey="loginAsSaleRoleUser">
            <argument name="adminUser" value="NewAdminUser"/>
        </actionGroup>

        <!-- Navigate to Configuration page and open Customers tab -->
        <actionGroup ref="AdminOpenStoreConfigPageActionGroup" stepKey="openStoreConfig"/>
        <actionGroup ref="AdminExpandConfigTabActionGroup" stepKey="expandCustomersTab">
            <argument name="tabName" value="Customers"/>
        </actionGroup>

        <!-- Assert no Login As Customer config section visible -->
        <actionGroup ref="AssertAdminLoginAsCustomerConfigNotVisibleActionGroup" stepKey="assertConfigNotVisible"/>

        <!-- Assert Login As Customer config section is not available by direct url -->
        <actionGroup ref="AssertAdminLoginAsCustomerConfigNotAvailableDirectlyActionGroup"
                     stepKey="assertConfigNotAvailableDirectly"/>
    </test>
</tests>
