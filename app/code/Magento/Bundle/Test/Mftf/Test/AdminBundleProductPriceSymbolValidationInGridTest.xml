<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="AdminBundleProductPriceSymbolValidationInGridTest">
        <annotations>
            <features value="Bundle"/>
            <stories value="Bundle Products Special Price Column in admin Grid should have % sign not currency sign"/>
            <title value="Admin to validate the bundle products special price column in grid should display percentage symbol instead of currency sign"/>
            <description value="Admin to validate the bundle products special price column in grid should display percentage symbol instead of currency sign"/>
            <severity value="AVERAGE"/>
            <testCaseId value="AC-1378"/>
            <useCaseId value="ACP2E-64"/>
            <group value="Bundle"/>
        </annotations>
        <before>
            <!-- Create a simple product -->
            <createData entity="SimpleProduct2" stepKey="simpleProduct1"/>
            <!-- Admin login -->
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginToAdminPanel"/>
        </before>
        <after>
            <!-- Navigate to catalog product index page -->
            <actionGroup ref="AdminOpenProductIndexPageActionGroup" stepKey="navigateToProductIndexPage"/>
            <!-- Set product grid to default columns -->
            <actionGroup ref="ResetProductGridToDefaultViewActionGroup" stepKey="setProductGridToDefaultColumns"/>
            <!-- Open the column dropdown to reset the default columns from the catalog product grid -->
            <actionGroup ref="ToggleAdminProductGridColumnsDropdownActionGroup" stepKey="openColumnsDropdownToReset"/>
            <actionGroup ref="ResetAdminProductGridColumnsActionGroup" stepKey="resetProductGridColumns"/>
            <actionGroup ref="ToggleAdminProductGridColumnsDropdownActionGroup" stepKey="closeColumnsDropdownAfterReset"/>
            <!-- Delete all the products from the catalog product grid -->
            <actionGroup ref="DeleteProductsIfTheyExistActionGroup" stepKey="deleteAllProducts"/>
            <!-- Logging out -->
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logout"/>
        </after>
        <!-- Go to bundle product creation page -->
        <actionGroup ref="AdminOpenNewProductFormPageActionGroup" stepKey="openNewBundleProductPage">
            <argument name="productType" value="{{BundleProduct.type}}"/>
            <argument name="attributeSetId" value="{{BundleProduct.set}}"/>
        </actionGroup>
        <!-- Sets the provided Special Price on the Admin Product creation/edit page. -->
        <actionGroup ref="AddSpecialPriceToProductActionGroup" stepKey="addSpecialPrice">
            <argument name="price" value="{{SimpleProductWithSpecialPrice.special_price}}"/>
        </actionGroup>
        <!-- Add the bundle option to the product -->
        <actionGroup ref="AddBundleOptionWithOneProductActionGroup" stepKey="addBundleOption">
            <argument name="x" value="0"/>
            <argument name="n" value="1"/>
            <argument name="prodOneSku" value="$$simpleProduct1.sku$$"/>
            <argument name="prodTwoSku" value=""/>
            <argument name="optionTitle" value="{{BundleProduct.optionTitle1}}"/>
            <argument name="inputType" value="{{BundleProduct.optionInputType1}}"/>
        </actionGroup>
        <!-- Add the default attribute value for the bundle product creation page-->
        <actionGroup ref="CreateBasicBundleProductActionGroup" stepKey="createBundledProduct">
            <argument name="bundleProduct" value="BundleProduct"/>
        </actionGroup>
        <!-- Save the bundle product -->
        <actionGroup ref="SaveProductFormActionGroup" stepKey="saveProductForm"/>

        <!-- Navigate to catalog product grid page -->
        <actionGroup ref="AdminOpenProductIndexPageActionGroup" stepKey="navigateToProductIndexPage"/>

        <!-- Set product grid to default columns -->
        <actionGroup ref="ResetProductGridToDefaultViewActionGroup" stepKey="setProductGridToDefaultColumns"/>
        <!-- Open the column dropdown to reset the default columns from the catalog product grid -->
        <actionGroup ref="ToggleAdminProductGridColumnsDropdownActionGroup" stepKey="openToResetColumnsDropdown"/>
        <actionGroup ref="ResetAdminProductGridColumnsActionGroup" stepKey="resetAdminProductGridColumns"/>
        <actionGroup ref="ToggleAdminProductGridColumnsDropdownActionGroup" stepKey="closeColumnsDropdownAfterReset"/>

        <!-- Open the column dropdown to add the special price from the catalog product grid -->
        <actionGroup ref="ToggleAdminProductGridColumnsDropdownActionGroup" stepKey="openColumnsDropdownSpecialPrice"/>
        <actionGroup ref="CheckAdminProductGridColumnOptionActionGroup" stepKey="checkSpecialPriceOption">
            <argument name="optionName" value="Special Price"/>
        </actionGroup>
        <actionGroup ref="ToggleAdminProductGridColumnsDropdownActionGroup" stepKey="closeColumnsDropdownSpecialPrice"/>

        <!-- Search the created bundle product with sku -->
        <actionGroup ref="FilterProductGridBySku2ActionGroup" stepKey="filterBundleProductGridBySku">
            <argument name="sku" value="{{BundleProduct.sku}}"/>
        </actionGroup>

        <!-- Asserting with the special price value contains the percentage value -->
        <actionGroup ref="AdminAssertSpecialPriceAttributeValueOnProductGridPageActionGroup" stepKey="assertSpecialPricePercentageSymbol">
            <argument name="specialPriceColumn" value="Special Price"/>
            <argument name="expectedValue" value="90.00%"/>
        </actionGroup>
    </test>
</tests>
