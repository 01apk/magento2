<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="StorefrontCheckBundleProductOptionTierPrices">
        <annotations>
            <features value="Bundle"/>
            <stories value="View bundle products"/>
            <title value="Check tier prices for bundle options"/>
            <testCaseId value="MAGETWO-98968"/>
            <group value="bundle"/>
        </annotations>
        <before>
            <!-- Create simple products -->
            <createData entity="SimpleProduct2" stepKey="simpleProduct1">
                <field key="price">10</field>
            </createData>
            <createData entity="SimpleProduct2" stepKey="simpleProduct2">
                <field key="price">20</field>
            </createData>

            <!-- Add tier prices to simple products -->
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <amOnPage url="{{AdminProductEditPage.url($$simpleProduct1.id$$)}}" stepKey="openAdminEditPageProduct1"/>
            <actionGroup ref="ProductSetAdvancedPricing" stepKey="addTierPriceProduct1">
                <argument name="group" value="ALL GROUPS"/>
                <argument name="quantity" value="5"/>
                <argument name="price" value="Discount"/>
                <argument name="amount" value="50"/>
            </actionGroup>

            <amOnPage url="{{AdminProductEditPage.url($$simpleProduct2.id$$)}}" stepKey="openAdminEditPageProduct2"/>
            <actionGroup ref="ProductSetAdvancedPricing" stepKey="addTierPriceProduct2">
                <argument name="group" value="ALL GROUPS"/>
                <argument name="quantity" value="7"/>
                <argument name="price" value="Discount"/>
                <argument name="amount" value="25"/>
            </actionGroup>

            <!-- Create Bundle product -->
            <createData entity="ApiBundleProduct" stepKey="createBundleProduct"/>
            <createData entity="DropDownBundleOption" stepKey="createDropDownBundleOption">
                <requiredEntity createDataKey="createBundleProduct"/>
                <field key="title">Drop-down Option</field>
            </createData>
            <createData entity="RadioButtonsOption" stepKey="createBundleRadioButtonsOption">
                <requiredEntity createDataKey="createBundleProduct"/>
                <field key="title">Radio Buttons Option</field>
            </createData>
            <createData entity="CheckboxOption" stepKey="createBundleCheckboxOption">
                <requiredEntity createDataKey="createBundleProduct"/>
                <field key="title">Checkbox Option</field>
            </createData>
            <createData entity="ApiBundleLink" stepKey="linkCheckboxOptionToProduct1">
                <requiredEntity createDataKey="createBundleProduct"/>
                <requiredEntity createDataKey="createBundleCheckboxOption"/>
                <requiredEntity createDataKey="simpleProduct1"/>
            </createData>
            <createData entity="ApiBundleLink" stepKey="linkCheckboxOptionToProduct2">
                <requiredEntity createDataKey="createBundleProduct"/>
                <requiredEntity createDataKey="createBundleCheckboxOption"/>
                <requiredEntity createDataKey="simpleProduct2"/>
            </createData>
            <createData entity="ApiBundleLink" stepKey="linkDropDownOptionToProduct1">
                <requiredEntity createDataKey="createBundleProduct"/>
                <requiredEntity createDataKey="createDropDownBundleOption"/>
                <requiredEntity createDataKey="simpleProduct1"/>
            </createData>
            <createData entity="ApiBundleLink" stepKey="linkDropDownOptionToProduct2">
                <requiredEntity createDataKey="createBundleProduct"/>
                <requiredEntity createDataKey="createDropDownBundleOption"/>
                <requiredEntity createDataKey="simpleProduct2"/>
            </createData>
            <createData entity="ApiBundleLink" stepKey="linkRadioButtonsOptionToProduct1">
                <requiredEntity createDataKey="createBundleProduct"/>
                <requiredEntity createDataKey="createBundleRadioButtonsOption"/>
                <requiredEntity createDataKey="simpleProduct1"/>
            </createData>
            <createData entity="ApiBundleLink" stepKey="linkRadioButtonsOptionToProduct2">
                <requiredEntity createDataKey="createBundleProduct"/>
                <requiredEntity createDataKey="createBundleRadioButtonsOption"/>
                <requiredEntity createDataKey="simpleProduct2"/>
            </createData>

            <magentoCLI command="indexer:reindex" stepKey="reindex"/>
        </before>
        <after>
            <deleteData createDataKey="simpleProduct1" stepKey="deleteSimpleProduct1"/>
            <deleteData createDataKey="simpleProduct2" stepKey="deleteSimpleProduct2"/>
            <deleteData createDataKey="createBundleProduct" stepKey="deleteBundleProduct"/>
        </after>

        <!-- Go to storefront product page -->
        <amOnPage url="{{StorefrontProductPage.url($$createBundleProduct.custom_attributes[url_key]$$)}}" stepKey="onPage"/>
        <waitForPageLoad stepKey="waitForPageLoad"/>
        <click selector="{{StorefrontBundledSection.addToCart}}" stepKey="clickCustomize"/>

        <!--"Drop-down" type option-->
        <!-- Check Tier Prices for product 1 -->
        <selectOption selector="{{StorefrontBundledSection.dropDownOptionOneProducts('Drop-down Option')}}" userInput="$$simpleProduct1.sku$$ +$$$simpleProduct1.price$$.00" stepKey="selectDropDownOptionProduct1"/>
        <seeOptionIsSelected selector="{{StorefrontBundledSection.dropDownOptionOneProducts('Drop-down Option')}}" userInput="$$simpleProduct1.sku$$ +$$$simpleProduct1.price$$.00" stepKey="checkDropDownOptionProduct1"/>
        <grabTextFrom selector="{{StorefrontBundledSection.dropDownOptionTierPrices('Drop-down Option')}}" stepKey="DropDownTierPriceTextProduct1"/>
        <assertContains stepKey="assertDropDownTierPriceTextProduct1">
            <expectedResult type="string">Buy 5 for $5.00 each and save 50%</expectedResult>
            <actualResult type="variable">DropDownTierPriceTextProduct1</actualResult>
        </assertContains>
        <!-- Check Tier Prices for product 2 -->
        <selectOption selector="{{StorefrontBundledSection.dropDownOptionOneProducts('Drop-down Option')}}" userInput="$$simpleProduct2.sku$$ +$$$simpleProduct2.price$$.00" stepKey="selectDropDownOptionProduct2"/>
        <seeOptionIsSelected selector="{{StorefrontBundledSection.dropDownOptionOneProducts('Drop-down Option')}}" userInput="$$simpleProduct2.sku$$ +$$$simpleProduct2.price$$.00" stepKey="checkDropDownOptionProduct2"/>
        <grabTextFrom selector="{{StorefrontBundledSection.dropDownOptionTierPrices('Drop-down Option')}}" stepKey="DropDownTierPriceTextProduct2"/>
        <assertContains stepKey="assertDropDownTierPriceTextProduct2">
            <expectedResult type="string">Buy 7 for $15.00 each and save 25%</expectedResult>
            <actualResult type="variable">DropDownTierPriceTextProduct2</actualResult>
        </assertContains>

        <!--"Radio Buttons" type option-->
        <!-- Check Tier Prices for product 1 -->
        <grabTextFrom selector="{{StorefrontBundledSection.radioButtonOptionLabel('Radio Buttons Option', '$$simpleProduct1.sku$$')}}" stepKey="RadioButtonsOptionTierPriceTextProduct1"/>
        <assertContains stepKey="assertRadioButtonsOptionTierPriceTextProduct1">
            <expectedResult type="string">Buy 5 for $5.00 each and save 50%</expectedResult>
            <actualResult type="variable">RadioButtonsOptionTierPriceTextProduct1</actualResult>
        </assertContains>
        <!-- Check Tier Prices for product 2 -->
        <grabTextFrom selector="{{StorefrontBundledSection.radioButtonOptionLabel('Radio Buttons Option', '$$simpleProduct2.sku$$')}}" stepKey="RadioButtonsOptionTierPriceTextProduct2"/>
        <assertContains stepKey="assertRadioButtonsOptionTierPriceTextProduct2">
            <expectedResult type="string">Buy 7 for $15.00 each and save 25%</expectedResult>
            <actualResult type="variable">RadioButtonsOptionTierPriceTextProduct2</actualResult>
        </assertContains>

        <!--"Checkbox" type option-->
        <!-- Check Tier Prices for product 1 -->
        <grabTextFrom selector="{{StorefrontBundledSection.checkboxOptionLabel('Checkbox Option', '$$simpleProduct1.sku$$')}}" stepKey="CheckBoxOptionTierPriceTextProduct1"/>
        <assertContains stepKey="assertCheckBoxOptionTierPriceTextProduct1">
            <expectedResult type="string">Buy 5 for $5.00 each and save 50%</expectedResult>
            <actualResult type="variable">CheckBoxOptionTierPriceTextProduct1</actualResult>
        </assertContains>
        <!-- Check Tier Prices for product 2 -->
        <grabTextFrom selector="{{StorefrontBundledSection.checkboxOptionLabel('Checkbox Option', '$$simpleProduct2.sku$$')}}" stepKey="CheckBoxOptionTierPriceTextProduct2"/>
        <assertContains stepKey="assertCheckBoxOptionTierPriceTextProduct2">
            <expectedResult type="string">Buy 7 for $15.00 each and save 25%</expectedResult>
            <actualResult type="variable">CheckBoxOptionTierPriceTextProduct2</actualResult>
        </assertContains>
    </test>
</tests>
