<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->
<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
        <test name="StorefrontSpecialPriceBundleProductInCartTest">
            <annotations>
                <features value="Bundle"/>
                <stories value="Check that the cart total is correct when the bundle product with special price added to the cart"/>
                <title value="Customer should not be able to add a Bundle Product to the cart when added a special price for associated products"/>
                <description value="Customer should not be able to add a Bundle Product to the cart when added a special price for associated products"/>
                <severity value="MAJOR"/>
                <testCaseId value="MC-19134"/>
                <useCaseId value="MC-18963"/>
                <group value="bundle"/>
            </annotations>
            <before>
                <createData entity="_defaultCategory" stepKey="category"/>
                <!-- Create simple product -->
                <createData entity="SimpleProductWithSpecialPrice" stepKey="simpleProduct">
                    <requiredEntity createDataKey="category"/>
                </createData>
                <!-- Create the bundle product -->
                <createData entity="ApiBundleProduct" stepKey="bundleProduct"/>
                <createData entity="RadioButtonsOption" stepKey="bundleOption">
                    <requiredEntity createDataKey="bundleProduct"/>
                    <field key="required">true</field>
                </createData>
                <createData entity="ApiBundleLink" stepKey="linkOptionToProduct">
                    <requiredEntity createDataKey="bundleProduct"/>
                    <requiredEntity createDataKey="bundleOption"/>
                    <requiredEntity createDataKey="simpleProduct"/>
                </createData>
                <!-- Add special price to simple product -->
                <actionGroup ref="LoginAsAdmin" stepKey="login"/>
                <amOnPage url="{{AdminProductEditPage.url($simpleProduct.id$)}}" stepKey="goToAdminProductPage"/>
                <actionGroup ref="AddSpecialPriceToProductActionGroup" stepKey="addSpecialPrice">
                    <argument name="price" value="{{SimpleProductWithSpecialPrice.special_price}}"/>
                </actionGroup>
                <actionGroup ref="saveProductForm" stepKey="saveSimpleProduct"/>
            </before>
            <after>
                <deleteData createDataKey="bundleProduct" stepKey="deleteBundleProduct"/>
                <deleteData createDataKey="simpleProduct" stepKey="deleteSimpleProduct"/>
                <deleteData createDataKey="category" stepKey="deleteCategory"/>
                <actionGroup ref="logout" stepKey="logout"/>
            </after>
            <!-- Go to storefront BundleProduct -->
            <amOnPage url="{{StorefrontProductPage.url($$bundleProduct.custom_attributes[url_key]$$)}}" stepKey="goToStorefront"/>
            <actionGroup ref="StorefrontAddBundleProductFromProductToCartActionGroup" stepKey="addProductToCartFirstTime">
                <argument name="productName" value="$$bundleProduct.name$$"/>
            </actionGroup>
            <actionGroup ref="StorefrontAddBundleProductFromProductToCartActionGroup" stepKey="addProductToCartSecondTime">
                <argument name="productName" value="$$bundleProduct.name$$"/>
            </actionGroup>
            <actionGroup ref="StorefrontClickOnMiniCartActionGroup" stepKey="openMiniCart"/>
            <actionGroup ref="AssertStorefrontMiniCartSubtotalActionGroup" stepKey="assertSubtotal">
                <argument name="subtotal" value="$180"/>
            </actionGroup>
        </test>
</tests>
