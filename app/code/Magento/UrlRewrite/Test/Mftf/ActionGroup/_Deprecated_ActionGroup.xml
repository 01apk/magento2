<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<!--
NOTICE: Action Groups in this file are DEPRECATED and SHOULD NOT BE USED anymore.
        Please find the Comment with proper replacement for each of ActionGroups provided.
-->
<actionGroups xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
              xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/actionGroupSchema.xsd">
    <actionGroup name="AdminAddUrlRewrite">
        <annotations>
            <description>Goes to the Admin Add URL Rewrite edit page. Fills in the provided URL details. Clicks on Save. Validates that the Success Message is present.</description>
        </annotations>
        <arguments>
            <argument name="category" type="string"/>
            <argument name="customUrlRewriteValue" type="string"/>
            <argument name="storeValue" type="string"/>
            <argument name="requestPath" type="string"/>
            <argument name="redirectTypeValue" type="string"/>
            <argument name="description" type="string"/>
        </arguments>

        <!-- NOTICE: This ActionGroup is DEPRECATED! Use `AdminAddUrlRewriteActionGroup` instead -->
        <amOnPage url="{{AdminUrlRewriteEditPage.url}}" stepKey="openUrlRewriteEditPage"/>
        <waitForElementVisible selector="{{AdminUrlRewriteEditSection.createCustomUrlRewrite}}" stepKey="waitForCreateUrlRewriteVisible"/>
        <selectOption selector="{{AdminUrlRewriteEditSection.createCustomUrlRewrite}}" userInput="{{customUrlRewriteValue}}" stepKey="selectUrlRewriteTypeOption"/>
        <waitForElementVisible selector="{{AdminUrlRewriteEditSection.categoryInTree(category)}}" stepKey="waitForCategoryInTreeVisible"/>
        <click selector="{{AdminUrlRewriteEditSection.categoryInTree(category)}}" stepKey="clickOnCategoryInTree"/>
        <waitForElementVisible selector="{{AdminUrlRewriteEditSection.store}}" stepKey="waitForStoreSelectVisible"/>
        <selectOption selector="{{AdminUrlRewriteEditSection.store}}" userInput="{{storeValue}}" stepKey="selectStoreOption"/>
        <fillField selector="{{AdminUrlRewriteEditSection.requestPath}}" userInput="{{requestPath}}" stepKey="fillRequestPathField"/>
        <selectOption selector="{{AdminUrlRewriteEditSection.redirectType}}" userInput="{{redirectTypeValue}}" stepKey="selectRedirectType"/>
        <fillField selector="{{AdminUrlRewriteEditSection.description}}" userInput="{{description}}" stepKey="fillDescriptionField"/>
        <click selector="{{AdminMainActionsSection.save}}" stepKey="clickSaveButton"/>
        <waitForElementVisible selector="{{AdminMessagesSection.success}}" stepKey="waitForSuccessMessage"/>
        <see selector="{{AdminMessagesSection.success}}" userInput="The URL Rewrite has been saved." stepKey="seeSuccessMessage"/>
    </actionGroup>

    <actionGroup name="AdminAddUrlRewriteForProduct">
        <annotations>
            <description>Adds the provided URL Rewrite details for a Product.</description>
        </annotations>
        <arguments>
            <argument name="storeValue" type="string"/>
            <argument name="requestPath" type="string"/>
            <argument name="redirectTypeValue" type="string"/>
            <argument name="description" type="string"/>
        </arguments>

        <!-- NOTICE: This ActionGroup is DEPRECATED! Use `AdminAddUrlRewriteForProductActionGroup` instead -->
        <waitForElementVisible selector="{{AdminUrlRewriteProductSection.skipCategoryButton}}" stepKey="waitForSkipCategoryButton"/>
        <click selector="{{AdminUrlRewriteProductSection.skipCategoryButton}}" stepKey="clickOnSkipCategoryButton"/>
        <waitForPageLoad stepKey="waitForProductPageToLoad"/>
        <click selector="{{AdminUrlRewriteEditSection.store}}" stepKey="clickOnStore"/>
        <click selector="{{AdminUrlRewriteEditSection.storeValue('storeValue')}}" stepKey="clickOnStoreValue"/>
        <fillField selector="{{AdminUrlRewriteEditSection.requestPath}}" userInput="{{requestPath}}" stepKey="fillRequestPath"/>
        <click selector="{{AdminUrlRewriteEditSection.redirectType}}" stepKey="selectRedirectType"/>
        <click selector="{{AdminUrlRewriteEditSection.redirectTypeValue('redirectTypeValue')}}" stepKey="clickOnRedirectTypeValue"/>
        <fillField selector="{{AdminUrlRewriteEditSection.description}}" userInput="{{description}}" stepKey="fillDescription"/>
        <click selector="{{AdminUrlRewriteEditSection.saveButton}}" stepKey="clickOnSaveButton"/>
        <seeElement selector="{{AdminUrlRewriteIndexSection.successMessage}}" stepKey="seeSuccessSaveMessage"/>
    </actionGroup>

    <actionGroup name="AdminAddCustomUrlRewrite">
        <annotations>
            <description>Goes to the Admin URL Rewrite edit page. Adds the provided Custom URL Rewrite details. Clicks on Save. Validates that the Success Message is present.</description>
        </annotations>
        <arguments>
            <argument name="customUrlRewriteValue" type="string"/>
            <argument name="storeValue" type="string"/>
            <argument name="requestPath" type="string"/>
            <argument name="targetPath" type="string"/>
            <argument name="redirectTypeValue" type="string"/>
            <argument name="description" type="string"/>
        </arguments>

        <!-- NOTICE: This ActionGroup is DEPRECATED! Use `AdminAddCustomUrlRewriteActionGroup` instead -->
        <amOnPage url="{{AdminUrlRewriteEditPage.url}}" stepKey="openUrlRewriteEditPage"/>
        <waitForPageLoad stepKey="waitForUrlRewriteEditPageToLoad" after="openUrlRewriteEditPage"/>
        <click selector="{{AdminUrlRewriteEditSection.createCustomUrlRewrite}}" stepKey="clickOnCustonUrlRewrite"/>
        <click selector="{{AdminUrlRewriteEditSection.createCustomUrlRewriteValue('customUrlRewriteValue')}}" stepKey="selectCustom"/>
        <click selector="{{AdminUrlRewriteEditSection.store}}" stepKey="clickOnStore"/>
        <click selector="{{AdminUrlRewriteEditSection.storeValue('storeValue')}}" stepKey="clickOnStoreValue"/>
        <fillField selector="{{AdminUrlRewriteEditSection.requestPath}}" userInput="{{requestPath}}" stepKey="fillRequestPath"/>
        <fillField selector="{{AdminUrlRewriteEditSection.targetPath}}" userInput="{{targetPath}}" stepKey="fillTargetPath"/>
        <click selector="{{AdminUrlRewriteEditSection.redirectType}}" stepKey="selectRedirectType"/>
        <click selector="{{AdminUrlRewriteEditSection.redirectTypeValue('redirectTypeValue')}}" stepKey="selectRedirectTypeValue"/>
        <fillField selector="{{AdminUrlRewriteEditSection.description}}" userInput="{{description}}" stepKey="fillDescription"/>
        <click selector="{{AdminUrlRewriteEditSection.saveButton}}" stepKey="clickOnSaveButton"/>
        <seeElement selector="{{AdminUrlRewriteIndexSection.successMessage}}" stepKey="seeSuccessSaveMessage"/>
    </actionGroup>

    <actionGroup name="AdminUpdateUrlRewrite">
        <annotations>
            <description>Updates the URL Rewrite fields with the provided details.</description>
        </annotations>
        <arguments>
            <argument name="storeValue" type="string"/>
            <argument name="requestPath" type="string"/>
            <argument name="redirectTypeValue" type="string"/>
            <argument name="description" type="string"/>
        </arguments>

        <!-- NOTICE: This ActionGroup is DEPRECATED! Use `AdminUpdateUrlRewriteActionGroup` instead -->
        <click selector="{{AdminUrlRewriteEditSection.store}}" stepKey="clickOnStore"/>
        <click selector="{{AdminUrlRewriteEditSection.storeValue(storeValue)}}" stepKey="clickOnStoreValue"/>
        <fillField selector="{{AdminUrlRewriteEditSection.requestPath}}" userInput="{{requestPath}}" stepKey="fillRequestPath"/>
        <click selector="{{AdminUrlRewriteEditSection.redirectType}}" stepKey="selectRedirectType"/>
        <click selector="{{AdminUrlRewriteEditSection.redirectTypeValue(redirectTypeValue)}}" stepKey="selectRedirectTypeValue"/>
        <fillField selector="{{AdminUrlRewriteEditSection.description}}" userInput="{{description}}" stepKey="fillDescription"/>
        <click selector="{{AdminUrlRewriteEditSection.saveButton}}" stepKey="clickOnSaveButton"/>
        <seeElement selector="{{AdminUrlRewriteIndexSection.successMessage}}" stepKey="seeSuccessSaveMessage"/>
    </actionGroup>

    <actionGroup name="AdminUpdateCustomUrlRewrite">
        <annotations>
            <description>Updates the Custom URL Rewrite fields with the provided details.</description>
        </annotations>
        <arguments>
            <argument name="storeValue" type="string"/>
            <argument name="requestPath" type="string"/>
            <argument name="targetPath" type="string"/>
            <argument name="redirectTypeValue" type="string"/>
            <argument name="description" type="string"/>
        </arguments>

        <!-- NOTICE: This ActionGroup is DEPRECATED! Use `AdminUpdateCustomUrlRewriteActionGroup` instead -->
        <click selector="{{AdminUrlRewriteEditSection.store}}" stepKey="clickOnStore"/>
        <click selector="{{AdminUrlRewriteEditSection.storeValue('storeValue')}}" stepKey="clickOnStoreValue"/>
        <fillField selector="{{AdminUrlRewriteEditSection.requestPath}}" userInput="{{requestPath}}" stepKey="fillRequestPath"/>
        <fillField selector="{{AdminUrlRewriteEditSection.targetPath}}" userInput="{{targetPath}}" stepKey="fillTargetPath"/>
        <selectOption selector="{{AdminUrlRewriteEditSection.redirectType}}" userInput="{{redirectTypeValue}}" stepKey="selectRedirectTypeValue"/>
        <fillField selector="{{AdminUrlRewriteEditSection.description}}" userInput="{{description}}" stepKey="fillDescription"/>
        <click selector="{{AdminUrlRewriteEditSection.saveButton}}" stepKey="clickOnSaveButton"/>
        <seeElement selector="{{AdminUrlRewriteIndexSection.successMessage}}" stepKey="seeSuccessSaveMessage"/>
    </actionGroup>
    <actionGroup name="AdminSearchByRequestPath">
        <annotations>
            <description>Goes to the Admin URL Rewrite grid page. Searches the grid based on the provided Redirect Path. Validates that the provided Redirect Path, Type and Target Path are present and correct in the grid.</description>
        </annotations>
        <arguments>
            <argument name="redirectPath" type="string"/>
            <argument name="redirectType" type="string"/>
            <argument name="targetPath" type="string"/>
        </arguments>

        <!-- NOTICE: This ActionGroup is DEPRECATED! Use `AdminSearchByRequestPathActionGroup` instead -->
        <amOnPage url="{{AdminUrlRewriteIndexPage.url}}" stepKey="openUrlRewriteEditPage"/>
        <waitForPageLoad stepKey="waitForUrlRewriteEditPageToLoad"/>
        <click selector="{{AdminUrlRewriteIndexSection.resetButton}}" stepKey="clickOnResetButton"/>
        <waitForPageLoad stepKey="waitForPageToLoad"/>
        <fillField selector="{{AdminUrlRewriteIndexSection.requestPathFilter}}" userInput="{{redirectPath}}" stepKey="fillRedirectPathFilter"/>
        <click selector="{{AdminUrlRewriteIndexSection.searchButton}}" stepKey="clickOnSearchButton"/>
        <waitForPageLoad stepKey="waitForPageToLoad1"/>
        <see selector="{{AdminUrlRewriteIndexSection.requestPathColumn('1')}}" userInput="{{redirectPath}}" stepKey="seeTheRedirectPathForOldUrl"/>
        <see selector="{{AdminUrlRewriteIndexSection.targetPathColumn('1')}}" userInput="{{targetPath}}" stepKey="seeTheTargetPath"/>
        <see selector="{{AdminUrlRewriteIndexSection.redirectTypeColumn('1')}}" userInput="{{redirectType}}" stepKey="seeTheRedirectTypeForOldUrl"/>
    </actionGroup>

    <actionGroup name="AdminSearchUrlRewriteProductBySku">
        <annotations>
            <description>Goes to the Admin URL Rewrite grid page. Searches the grid based on the provided Product SKU. Clicks on the 1st row in the grid.</description>
        </annotations>
        <arguments>
            <argument name="productSku" type="string"/>
        </arguments>

        <!-- NOTICE: This ActionGroup is DEPRECATED! Use `AdminSearchUrlRewriteProductBySkuActionGroup` instead -->
        <amOnPage url="{{AdminUrlRewriteProductPage.url}}" stepKey="openUrlRewriteProductPage"/>
        <waitForPageLoad stepKey="waitForUrlRewriteProductPageToLoad"/>
        <click selector="{{AdminUrlRewriteProductSection.resetFilter}}" stepKey="clickOnResetFilter"/>
        <waitForPageLoad stepKey="waitForPageToLoad"/>
        <fillField selector="{{AdminUrlRewriteProductSection.skuFilter}}" userInput="{{productSku}}" stepKey="fillProductSkuFilter"/>
        <click selector="{{AdminUrlRewriteProductSection.searchFilter}}" stepKey="clickOnSearchFilter"/>
        <waitForPageLoad stepKey="waitForProductToLoad"/>
        <click selector="{{AdminUrlRewriteProductSection.productRow}}" stepKey="clickOnFirstRow"/>
        <waitForPageLoad stepKey="waitForProductCategoryPageToLoad"/>
    </actionGroup>

    <actionGroup name="AdminSearchDeletedUrlRewrite">
        <annotations>
            <description>Goes to the Admin URL Rewrite grid page. Searches the grid for the provided Request Path. Validates that it does NOT appear in the grid.</description>
        </annotations>
        <arguments>
            <argument name="requestPath" type="string"/>
        </arguments>

        <!-- NOTICE: This ActionGroup is DEPRECATED! Use `AdminSearchDeletedUrlRewriteActionGroup` instead -->
        <amOnPage url="{{AdminUrlRewriteIndexPage.url}}" stepKey="openUrlRewriteEditPage"/>
        <waitForPageLoad stepKey="waitForUrlRewriteEditPageToLoad"/>
        <click selector="{{AdminUrlRewriteIndexSection.resetButton}}" stepKey="clickOnResetButton"/>
        <waitForPageLoad stepKey="waitForPageToLoad"/>
        <fillField selector="{{AdminUrlRewriteIndexSection.requestPathFilter}}" userInput="{{requestPath}}" stepKey="fillRedirectPathFilter"/>
        <click selector="{{AdminUrlRewriteIndexSection.searchButton}}" stepKey="clickOnSearchButton"/>
        <waitForPageLoad stepKey="waitForPageToLoad1"/>
        <see selector="{{AdminUrlRewriteIndexSection.emptyRecords}}" userInput="We couldn't find any records." stepKey="seeEmptyRecordMessage"/>
    </actionGroup>

    <actionGroup name="AdminDeleteUrlRewrite">
        <annotations>
            <description>Goes to the Admin URL Rewrite grid page. Deletes the provided Request Path. Validates that the Success Message is present and correct.</description>
        </annotations>
        <arguments>
            <argument name="requestPath" type="string"/>
        </arguments>

        <!-- NOTICE: This ActionGroup is DEPRECATED! Use `AdminDeleteUrlRewriteActionGroup` instead -->
        <amOnPage url="{{AdminUrlRewriteIndexPage.url}}" stepKey="openUrlRewriteEditPage"/>
        <waitForPageLoad stepKey="waitForUrlRewriteEditPageToLoad"/>
        <click selector="{{AdminUrlRewriteIndexSection.resetButton}}" stepKey="clickOnResetButton"/>
        <waitForPageLoad stepKey="waitForPageToLoad"/>
        <fillField selector="{{AdminUrlRewriteIndexSection.requestPathFilter}}" userInput="{{requestPath}}" stepKey="fillRedirectPathFilter"/>
        <click selector="{{AdminUrlRewriteIndexSection.searchButton}}" stepKey="clickOnSearchButton"/>
        <waitForPageLoad stepKey="waitForPageToLoad1"/>
        <click selector="{{AdminUrlRewriteIndexSection.editButton('1')}}" stepKey="clickOnEditButton"/>
        <waitForPageLoad stepKey="waitForEditPageToLoad"/>
        <click selector="{{AdminUrlRewriteEditSection.deleteButton}}" stepKey="clickOnDeleteButton"/>
        <waitForPageLoad stepKey="waitForPageToLoad2"/>
        <waitForElementVisible selector="{{AdminUrlRewriteEditSection.okButton}}" stepKey="waitForOkButtonToVisible"/>
        <click selector="{{AdminUrlRewriteEditSection.okButton}}" stepKey="clickOnOkButton"/>
        <waitForPageLoad stepKey="waitForPageToLoad3"/>
        <see selector="{{AdminUrlRewriteIndexSection.successMessage}}" userInput="You deleted the URL rewrite." stepKey="seeSuccessMessage"/>
    </actionGroup>

    <actionGroup name="AssertPageByUrlRewriteIsNotFound">
        <annotations>
            <description>Validates that the provided Request Path does NOT exist on the Storefront. Validates that the 'Whoops' message is present and correct.</description>
        </annotations>
        <arguments>
            <argument name="requestPath" type="string"/>
        </arguments>

        <!-- NOTICE: This ActionGroup is DEPRECATED! Use `AssertPageByUrlRewriteIsNotFoundActionGroup` instead -->
        <amOnPage url="{{requestPath}}" stepKey="amOnPage"/>
        <waitForPageLoad stepKey="waitForStorefrontPageLoad"/>
        <see userInput="Whoops, our bad..." stepKey="seeWhoops"/>
    </actionGroup>

    <actionGroup name="AdminSearchAndSelectUrlRewriteInGrid">
        <annotations>
            <description>Goes to the Admin URL Rewrite grid page. Searches the grid for the provided Request Path. Clicks on Edit.</description>
        </annotations>
        <arguments>
            <argument name="requestPath" type="string"/>
        </arguments>

        <!-- NOTICE: This ActionGroup is DEPRECATED! Use `AdminSearchAndSelectUrlRewriteInGridActionGroup` instead -->
        <amOnPage url="{{AdminUrlRewriteIndexPage.url}}" stepKey="openUrlRewriteEditPage"/>
        <waitForPageLoad stepKey="waitForUrlRewriteEditPageToLoad"/>
        <click selector="{{AdminUrlRewriteIndexSection.resetButton}}" stepKey="clickOnResetButton"/>
        <waitForPageLoad stepKey="waitForPageToLoad"/>
        <fillField selector="{{AdminUrlRewriteIndexSection.requestPathFilter}}" userInput="{{requestPath}}" stepKey="fillRedirectPathFilter"/>
        <click selector="{{AdminUrlRewriteIndexSection.searchButton}}" stepKey="clickOnSearchButton"/>
        <waitForPageLoad stepKey="waitForPageToLoad1"/>
        <click selector="{{AdminUrlRewriteIndexSection.editButton('1')}}" stepKey="clickOnEditButton"/>
        <waitForPageLoad stepKey="waitForEditPageToLoad"/>
    </actionGroup>

    <actionGroup name="AssertStorefrontUrlRewriteRedirect">
        <annotations>
            <description>Goes to the provided New URL. Validates that the redirect works and the provided Category is present.</description>
        </annotations>
        <arguments>
            <argument name="category" type="string"/>
            <argument name="newRequestPath" type="string"/>
        </arguments>

        <!-- NOTICE: This ActionGroup is DEPRECATED! Use `AssertStorefrontUrlRewriteRedirectActionGroup` instead -->
        <amOnPage url="{{newRequestPath}}" stepKey="openCategoryInStorefront"/>
        <waitForPageLoad stepKey="waitForCategoryPageToLoad"/>
        <seeElement selector="{{StorefrontHeaderSection.NavigationCategoryByName(category)}}" stepKey="seeCategoryOnStoreNavigationBar"/>
        <seeElement selector="{{StorefrontCategoryMainSection.CategoryTitle(category)}}" stepKey="seeCategoryInTitle"/>
    </actionGroup>

    <actionGroup name="AssertStorefrontProductRedirect">
        <annotations>
            <description>Goes to the provided New Product URL. Validates that the redirect works and the provided Product is present and correct.</description>
        </annotations>
        <arguments>
            <argument name="productName" type="string"/>
            <argument name="productSku" type="string"/>
            <argument name="productRequestPath" type="string"/>
        </arguments>

        <!-- NOTICE: This ActionGroup is DEPRECATED! Use `AssertStorefrontProductRedirectActionGroup` instead -->
        <amOnPage url="{{productRequestPath}}" stepKey="openCategoryInStorefront"/>
        <waitForPageLoad stepKey="waitForCategoryPageToLoad"/>
        <see selector="{{StorefrontProductInfoMainSection.productName}}" userInput="{{productName}}" stepKey="seeProductNameInStoreFrontPage"/>
        <see selector="{{StorefrontProductInfoMainSection.productSku}}" userInput="{{productSku}}" stepKey="seeProductSkuInStoreFrontPage"/>
    </actionGroup>
</actionGroups>
