<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="AddOutOfStockProductToCompareListTest">
        <annotations>
            <features value="Catalog"/>
            <stories value="Product Comparison for products Out of Stock"/>
            <title value="Add Product that is Out of Stock product to Product Comparison"/>
            <description value="Customer should be able to add Product that is Out Of Stock to the Product Comparison"/>
            <severity value="MAJOR"/>
            <testCaseId value="MAGETWO-98644"/>
            <useCaseId value="MAGETWO-98522"/>
            <group value="Catalog"/>
        </annotations>
        <before>
            <magentoCLI command="config:set {{CatalogInventoryOptionsShowOutOfStockDisable.path}} {{CatalogInventoryOptionsShowOutOfStockDisable.value}}" stepKey="setConfigShowOutOfStockFalse"/>
            <actionGroup ref="CliCacheFlushActionGroup" stepKey="flushCache">
                <argument name="tags" value=""/>
            </actionGroup>
            <createData entity="SimpleSubCategory" stepKey="category"/>
            <createData entity="SimpleProduct4" stepKey="product">
                <requiredEntity createDataKey="category"/>
            </createData>
        </before>

        <after>
           <magentoCLI command="config:set {{CatalogInventoryOptionsShowOutOfStockDisable.path}} {{CatalogInventoryOptionsShowOutOfStockDisable.value}}" stepKey="setConfigShowOutOfStockFalse"/> 
            <actionGroup ref="CliCacheFlushActionGroup" stepKey="flushCache">
                <argument name="tags" value=""/>
            </actionGroup>
            <deleteData createDataKey="product" stepKey="deleteProduct"/> 
            <deleteData createDataKey="category" stepKey="deleteCategory"/> 
        </after>

        <actionGroup ref="StorefrontOpenProductPageActionGroup" stepKey="openProductStorefront">
            <argument name="productUrl" value="$$product.custom_attributes[url_key]$$"/>
        </actionGroup>
        
        <dontSeeElement selector="{{StorefrontProductInfoMainSection.productAddToCompare}}" stepKey="dontSeeAddToCompareLink"/>
      
        <magentoCLI command="config:set {{CatalogInventoryOptionsShowOutOfStockEnable.path}} {{CatalogInventoryOptionsShowOutOfStockEnable.value}}" stepKey="setConfigShowOutOfStockTrue"/>
  
        <actionGroup ref="CliIndexerReindexActionGroup" stepKey="reindex">
           <argument name="indices" value=""/>
        </actionGroup>
        <actionGroup ref="CliCacheFlushActionGroup" stepKey="flushCache">
           <argument name="tags" value=""/>
        </actionGroup>

        <actionGroup ref="StorefrontOpenProductPageActionGroup" stepKey="openProductStorefront1">
            <argument name="productUrl" value="$$product.custom_attributes[url_key]$$"/>
        </actionGroup>
       
        <actionGroup ref="StorefrontAddProductToCompareActionGroup" stepKey="addProductToCompare1">
            <argument name="productVar" value="$$product$$"/>
        </actionGroup>

         <actionGroup ref="StorefrontGoToCategoryPageActionGroup" stepKey="openCategoryPage">
            <argument name="categoryName" value="$$category.name$$"/>
        </actionGroup>

        <actionGroup ref="StorefrontOpenAndCheckComparisionActionGroup" stepKey="compareOpenComparePage"/>

        <actionGroup ref="SeeProductInComparisonListActionGroup" stepKey="seeProductInComparisonList">
          <argument name="productVar" value="$$product$$"/>
        </actionGroup>
    
       <actionGroup ref="StorefrontGoToCategoryPageActionGroup" stepKey="openCategoryPage1">
            <argument name="categoryName" value="$$category.name$$"/>
        </actionGroup>

        <actionGroup ref="StorefrontClearCompareActionGroup" stepKey="clearList"/>

        <actionGroup ref="StorefrontHoverProductOnCategoryPageActionGroup" stepKey="hoverProduct"/>

        <actionGroup ref="StorefrontAddProductToCompareActionGroup" stepKey="addProductToCompare2">
            <argument name="productVar" value="$$product$$"/>
        </actionGroup>
    
        <seeElement selector="{{StorefrontComparisonSidebarSection.ProductTitleByName($$product.name$$)}}" stepKey="seeProdNameOnCmpWidget"/>

        <actionGroup ref="StorefrontOpenAndCheckComparisionActionGroup" stepKey="compareOpenComparePage1"/>
       
        <actionGroup ref="SeeProductInComparisonListActionGroup" stepKey="seeProductInComparisonList1">
             <argument name="productVar" value="$$product$$"/>
        </actionGroup>

    </test>
</tests>
