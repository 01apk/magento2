<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="AdminAwsS3ExportBundleProductTest" extends="AdminExportBundleProductTest">
        <annotations>
            <features value="AwsS3"/>
            <stories value="Export Tax"/>
            <title value="S3 - Export Tax Rates"/>
            <description value="Exports tax rates from the System > Data Transfer > Import/Export Tax Rates page, from
            the Tax Rule page, from the Tax Rates grid page as a .csv, and from the Tax Rates grid page as an .xml.
            Validates contents in downloaded file for each export area. Note that MFTF cannot simply click export and
            have access to the file that is downloaded in the browser due to the test not having access to the server
            that is running the test browser. Therefore, this test verifies that the Export button can be successfully
            clicked, grabs the request URL from the Export button's form, executes the request on the magento machine
            via a curl request, and verifies the contents of the exported file. Uses S3 for the file system."/>
            <severity value="CRITICAL"/>
            <testCaseId value="MC-38558"/>
            <group value="importExport"/>
            <group value="remote_storage_aws_s3"/>
        </annotations>

        <before>
            <!-- Enable AWS S3 Remote Storage -->
            <magentoCLI command="setup:config:set {{RemoteStorageAwsS3ConfigData.enable_options}}" stepKey="enableRemoteStorage" before="firstSimpleProductForDynamic"/>
        </before>

        <after>
            <helper class="\Magento\AwsS3\Test\Mftf\Helper\S3FileAssertions" method="deleteDirectory" stepKey="deleteExportFileDirectory">
                <argument name="path">import_export/export</argument>
            </helper>

            <!-- Disable AWS S3 Remote Storage -->
            <magentoCLI command="setup:config:set {{RemoteStorageAwsS3ConfigData.disable_options}}" stepKey="disableRemoteStorage" after="logout"/>
        </after>

        <!-- Validate Export File on S3 -->
        <helper class="Magento\AwsS3\Test\Mftf\Helper\S3FileAssertions" method="assertFileExists" stepKey="assertExportFileExists">
            <argument name="filePath">import_export/export/{$grabNameFile}</argument>
        </helper>
        <helper class="Magento\AwsS3\Test\Mftf\Helper\S3FileAssertions" method="assertFileContainsString" stepKey="assertExportFileContainsFirstSimpleProductForDynamic">
            <argument name="filePath">import_export/export/{$grabNameFile}</argument>
            <argument name="text">$$firstSimpleProductForDynamic.sku$$</argument>
        </helper>
        <helper class="Magento\AwsS3\Test\Mftf\Helper\S3FileAssertions" method="assertFileContainsString" stepKey="assertExportFileContainsSecondSimpleProductForDynamic">
            <argument name="filePath">import_export/export/{$grabNameFile}</argument>
            <argument name="text">$$secondSimpleProductForDynamic.sku$$</argument>
        </helper>
        <helper class="Magento\AwsS3\Test\Mftf\Helper\S3FileAssertions" method="assertFileContainsString" stepKey="assertExportFileContainsDynamicBundleProduct">
            <argument name="filePath">import_export/export/{$grabNameFile}</argument>
            <argument name="text">$$createDynamicBundleProduct.sku$$</argument>
        </helper>
        <helper class="Magento\AwsS3\Test\Mftf\Helper\S3FileAssertions" method="assertFileContainsString" stepKey="assertExportFileContainsFirstSimpleProductForFixed">
            <argument name="filePath">import_export/export/{$grabNameFile}</argument>
            <argument name="text">$$firstSimpleProductForFixed.sku$$</argument>
        </helper>
        <helper class="Magento\AwsS3\Test\Mftf\Helper\S3FileAssertions" method="assertFileContainsString" stepKey="assertExportFileContainsSecondSimpleProductForFixed">
            <argument name="filePath">import_export/export/{$grabNameFile}</argument>
            <argument name="text">$$secondSimpleProductForFixed.sku$$</argument>
        </helper>
        <helper class="Magento\AwsS3\Test\Mftf\Helper\S3FileAssertions" method="assertFileContainsString" stepKey="assertExportFileContainsFixedBundleProduct">
            <argument name="filePath">import_export/export/{$grabNameFile}</argument>
            <argument name="text">$$createFixedBundleProduct.sku$$</argument>
        </helper>
        <helper class="Magento\AwsS3\Test\Mftf\Helper\S3FileAssertions" method="assertFileContainsString" stepKey="assertExportFileContainsFirstSimpleProductForFixedWithAttribute">
            <argument name="filePath">import_export/export/{$grabNameFile}</argument>
            <argument name="text">$$firstSimpleProductForFixedWithAttribute.sku$$</argument>
        </helper>
        <helper class="Magento\AwsS3\Test\Mftf\Helper\S3FileAssertions" method="assertFileContainsString" stepKey="assertExportFileContainsSecondSimpleProductForFixedWithAttribute">
            <argument name="filePath">import_export/export/{$grabNameFile}</argument>
            <argument name="text">$$secondSimpleProductForFixedWithAttribute.sku$$</argument>
        </helper>
        <helper class="Magento\AwsS3\Test\Mftf\Helper\S3FileAssertions" method="assertFileContainsString" stepKey="assertExportFileContainsFixedBundleProductWithAttribute">
            <argument name="filePath">import_export/export/{$grabNameFile}</argument>
            <argument name="text">$$createFixedBundleProductWithAttribute.sku$$</argument>
        </helper>

        <!-- Delete Export File -->
        <helper class="\Magento\AwsS3\Test\Mftf\Helper\S3FileAssertions" method="assertFileDoesNotExist" stepKey="assertExportFileDeleted">
            <argument name="filePath">import_export/export/{$grabNameFile}</argument>
        </helper>
    </test>
</tests>
