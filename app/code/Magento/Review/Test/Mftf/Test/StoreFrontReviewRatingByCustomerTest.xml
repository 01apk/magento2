<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="StoreFrontReviewRatingByCustomerTest">
        <annotations>
            <features value="Review"/>
            <stories value="Review By Customers"/>
            <title value="StoreFront Review Rating By Customers"/>
            <description value="Check if product rating is the same at list, table view on PLP and customers account."/>
            <severity value="AVERAGE"/>
            <useCaseId value=""/>
            <testCaseId value="ACP2E-111"/>
        </annotations>
        <before>
            <!-- Enable singe store view to view ratings-->
            <magentoCLI command="config:set general/single_store_mode/enabled 1" stepKey="enabledSingleStoreMode"/>
            <!--Login-->
            <actionGroup ref="AdminLoginActionGroup" stepKey="LoginAsAdmin"/>
            <!--Create product and Category-->
            <createData stepKey="category" entity="SimpleSubCategory"/>
            <createData stepKey="createProduct1" entity="SimpleProduct">
                <requiredEntity createDataKey="category"/>
            </createData>
            <createData stepKey="createProduct2" entity="SimpleProduct">
                <requiredEntity createDataKey="category"/>
            </createData>
        </before>
        <after>
            <!-- Delete reviews -->
            <actionGroup ref="AdminOpenReviewsPageActionGroup" stepKey="openAllReviewsPage"/>
            <actionGroup ref="AdminDeleteReviewsByUserNicknameActionGroup" stepKey="deleteCustomerReview"/>
            <actionGroup ref="ClearFiltersAdminDataGridActionGroup" stepKey="clearNickNameReviewFilters"/>
            <!-- Delete customer -->
            <actionGroup ref="AdminDeleteCustomerActionGroup" stepKey="deleteCustomer">
                <argument name="customerEmail" value="CustomerEntityOne.email"/>
            </actionGroup>
            <!--delete Category and Products -->
            <deleteData createDataKey="createProduct1" stepKey="deleteProduct1"/>
            <deleteData createDataKey="createProduct2" stepKey="deleteProduct2"/>
            <deleteData createDataKey="category" stepKey="deleteCategory"/>
            <!--Logout-->
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logout"/>
            <!-- Disable single store view back-->
            <magentoCLI command="config:set general/single_store_mode/enabled 0" stepKey="enabledSingleStoreMode"/>
        </after>
        <!-- Go to frontend and make a user account and login with it -->
        <actionGroup ref="SignUpNewUserFromStorefrontActionGroup" stepKey="signUpNewUser">
            <argument name="Customer" value="CustomerEntityOne"/>
        </actionGroup>
        <!-- Go to the product view page -->
        <actionGroup ref="StorefrontOpenProductPageActionGroup" stepKey="openStorefrontProductPage">
            <argument name="productUrl" value="$$createProduct1.custom_attributes[url_key]$$"/>
        </actionGroup>
        <!-- Click on reviews and add reviews with current user -->
        <click selector="{{StorefrontProductReviewsSection.reviewsTab}}" stepKey="openReviewTab"/>
        <!-- set product rating stars -->
        <actionGroup ref="StorefrontSetProductRatingStarsActionGroup" stepKey="setQualityStars">
            <argument name="ratingName" value="Quality"/>
            <argument name="stars" value="3"/>
        </actionGroup>
        <actionGroup ref="StorefrontSetProductRatingStarsActionGroup" stepKey="setValueStars">
            <argument name="ratingName" value="Value"/>
            <argument name="stars" value="4"/>
        </actionGroup>
        <actionGroup ref="StorefrontSetProductRatingStarsActionGroup" stepKey="setPriceStars">
            <argument name="ratingName" value="Price"/>
            <argument name="stars" value="5"/>
        </actionGroup>
        <!-- Click on reviews and add  reviews with current user -->
        <actionGroup ref="StorefrontAddProductReviewActionGroup" stepKey="addReview"/>
        <!-- Go to Pending reviews page and clear filters -->
        <actionGroup ref="AdminOpenPendingReviewsPageActionGroup" stepKey="openReviewsPage"/>
        <actionGroup ref="ClearFiltersAdminDataGridActionGroup" stepKey="clearFilters"/>
        <!-- Moderate first product reviews: change review status from pending to approved, save -->
        <actionGroup ref="AdminOpenReviewByUserNicknameActionGroup" stepKey="openFirstCustomerReviews"/>
        <actionGroup ref="AdminChangeReviewStatusActionGroup" stepKey="changeFirstReviewStatus"/>
        <actionGroup ref="AdminSaveReviewActionGroup" stepKey="saveModeratedFirstReview"/>
        <!-- Navigate to PLP and check product rating for list and table views -->
        <actionGroup ref="StorefrontOpenHomePageActionGroup" stepKey="amOnStoreViewHomePage"/>
        <actionGroup ref="StoreFrontQuickSearchActionGroup" stepKey="searchBySku">
            <argument name="query" value="$$createProduct1.sku$$"/>
        </actionGroup>
        <!-- Check stars at list view -->
        <click selector="{{StorefrontCategoryTopToolbarSection.listMode}}" stepKey="switchCategoryViewToListMode"/>
        <grabAttributeFrom selector="#rating-result_$$createProduct1.id$$ span" userInput="style" stepKey="getProductStarsAtListView"/>
        <assertEquals stepKey="checkProductStarsAtListView">
            <actualResult type="string">$getProductStarsAtListView</actualResult>
            <expectedResult type="string">width: 80%;</expectedResult>
        </assertEquals>
        <!-- Check stars at grid view -->
        <click selector="{{StorefrontCategoryTopToolbarSection.gridMode}}" stepKey="switchCategoryViewToGridMode"/>
        <grabAttributeFrom selector="#rating-result_$$createProduct1.id$$ span" userInput="style" stepKey="getProductStarsAtGridView"/>
        <assertEquals stepKey="checkProductStarsAtGridView">
            <actualResult type="string">$getProductStarsAtGridView</actualResult>
            <expectedResult type="string">width: 80%;</expectedResult>
        </assertEquals>
        <!-- Navigate to user account and check product ratings-->
        <amOnPage url="review/customer/" stepKey="amOnCustomerReviewPage"/>
        <click selector=".action.more" stepKey="amOnProductReviewDetailsPage"/>
        <!-- Check stars at rating result under the product name -->
        <grabAttributeFrom selector="#rating-result_$$createProduct1.id$$ span" userInput="style" stepKey="getProductResultStarsUnderProductName"/>
        <assertEquals stepKey="checkProductResultStarsUnderProductName">
            <actualResult type="string">$getProductResultStarsUnderProductName</actualResult>
            <expectedResult type="string">width: 80%;</expectedResult>
        </assertEquals>
        <!-- Check that the rating are accurate-->
        <grabAttributeFrom selector=".rating-result.Quality span" userInput="style" stepKey="getProductQualityStarsAtUserAccount"/>
        <assertEquals stepKey="checkProductQualityStarsAtUserAccount">
            <actualResult type="string">$getProductQualityStarsAtUserAccount</actualResult>
            <expectedResult type="string">width: 60%;</expectedResult>
        </assertEquals>
        <grabAttributeFrom selector=".rating-result.Value span" userInput="style" stepKey="getProductValueStarsAtUserAccount"/>
        <assertEquals stepKey="checkProductValueStarsAtUserAccount">
            <actualResult type="string">$getProductValueStarsAtUserAccount</actualResult>
            <expectedResult type="string">width: 80%;</expectedResult>
        </assertEquals>
        <grabAttributeFrom selector=".rating-result.Price span" userInput="style" stepKey="getProductPriceStarsAtUserAccount"/>
        <assertEquals stepKey="checkProductPriceStarsAtUserAccount">
            <actualResult type="string">$getProductPriceStarsAtUserAccount</actualResult>
            <expectedResult type="string">width: 100%;</expectedResult>
        </assertEquals>
    </test>
</tests>
