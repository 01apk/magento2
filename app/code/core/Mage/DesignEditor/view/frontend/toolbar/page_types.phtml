<?php
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magentocommerce.com for more information.
 *
 * @category    design
 * @package     Mage_DesignEditor
 * @copyright   Copyright (c) 2012 Magento Inc. (http://www.magentocommerce.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */
?>
<?php /** @var $this Mage_DesignEditor_Block_Toolbar_PageType */ ?>
<div id="vde_page_types_hierarchy" class="vde_toolbar_cell">
    <div class="vde_toolbar_cell_title">
        <?php echo $this->__('Page:'); ?>
        <span class="vde_toolbar_cell_value"><?php echo $this->getSelectedPageTypeLabel(); ?></span>
    </div>
    <div class="vde_toolbar_cell_content">
        <div id="vde_page_types_tree"><?php echo $this->renderPageTypes(); ?></div>
    </div>
</div>
<script type="text/javascript">
(function ($) {
    $(document).ready(function () {
        var treeElement = $("#vde_page_types_tree");
        treeElement.jstree({
            ui: {
                select_limit: 1,
                selected_parent_close: false
            },
            themes: {
                dots: false,
                icons: false
            }
        }).bind('select_node.jstree', function (e, data) {
            var selectedListItem = data.rslt.obj;
            var cellElement = $(this).parents('.vde_toolbar_cell');
            cellElement.find('.vde_toolbar_cell_value').text($.trim(selectedListItem.children('a').text()));
            if (cellElement.hasClass('active')) {
                cellElement.removeClass('active');
                window.location = selectedListItem.children('a').attr('href');
            }
        });
        <?php if ($this->getSelectedPageType()) : ?>
        treeElement.bind('loaded.jstree', function (e, data) {
            var treeInstance = data.inst;
            treeInstance.select_node($(this).find('li[rel="<?php echo $this->getSelectedPageType(); ?>"]'));
        });
        <?php endif; ?>
        $('#vde_page_types_hierarchy').one('activate_toolbar_cell.vde', function () {
            /* At the time of applying the scroll bar, the underlying element should be visible */
            treeElement.slimScroll({
                color: '#cccccc',
                alwaysVisible: true,
                opacity: 1,
                height: 'auto',
                size: 9
            });
        });
    });
})(jQuery);
</script>
